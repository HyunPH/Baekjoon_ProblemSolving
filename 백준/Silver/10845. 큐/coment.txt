# 생각
push x: x넣기
pop: 가장 앞의 원소 빼기, 그 수 출력(없으면 -1 출력)
size: 들어있는 정수 개수 출력
empty: 비어있으면 1, 아니면 0 출력
front: 큐의 가장 앞에 있는 정수 출력(없으면 -1 출력)
back: 큐의 가장 뒤에 있는 정수 출력(없으면 -1 출력)
명령의 수 N(<= 10000)
명령 주어질 때마다(한줄마다) 결과출력


pop에서 문제가 생긴다. 0인덱스 값을 뺀 다음, 뒤에 문자들이 앞으로 와야하는데,
그 과정을 하는 데에 시간이 걸릴 것이 뻔하다. 하지만 다른 방법을 모르기 때문에, 그렇게 구현해보자.
문자열을 문자와 비교할 때, 그냥 연산으로 비교하면 안되는 것을 깨달았다.
그래서 strcmp함수를 이용해서 비교를 구현했다.

참고해보니 pop을 할 때, 앞쪽으로 원소 옮기는 작업을 다들 안했다. 

top은 push해줄 때마다 더해주기만 하고, 
bottom은 pop해줄 때마다 추가해줘서,
배열에 공백이 생기지만 출력은 제대로 되도록 하여 반복문을 제외한 알고리즘을 구현했다.
