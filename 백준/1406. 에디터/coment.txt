# 생각
커서의 초기값은 맨 뒤이고, 
커서가  추가하거나 삭제할 때 문자열이 이동해야 함.

우선, 문자열 이동하는 코드 구현을 실험하고 있음.
그리고 오늘, 단순반복으로 시간이 많이 걸리고, 문자열 길이도 제한적이어서 맞지 않지만,
출력은 같도록 했음.

시간을 줄이고, 문자열 길이를 늘릴 방안을 고안하여 문제 풀어보자.


시간을 줄일 방안을 알아냈다.
배열 하나를 더 만들어 그곳에 데이터를 저장하는데, 스택원리를 이용해서 저장하면 될 것 같음.

원래 배열, 임시 배열
top: 커서의 위치
L: 원래 pop, 임시 push
D: 임시 pop,  원래 push
B: 원래 pop
P x: 원래 x push

일반적인 경우를 생각했을 때 구현하긴 했는데 예외처리를 하는 것이 어렵다.
B일 때 알고리즘을 이상하게 생각했었다.

출력값은 똑바로 나오는데, OutOfBounds라고 오류가 뜬다.
문제에서 명령이 500000까지 주어질 수 있다고 하는데, 이 부분을 따로 정리해야 할 듯 하다.

출력 제대로 나오는데 이유를 모르겠다.
하나의 글을 봤는데 입력, 출력을 번갈아서 반복을 많이 하다보니까 틀렸다고 한다.
그래서 getchar()로 한번에 문자열, 명령문을 입력받은 다음에 출력만 계속 한다고 한다.

알고리즘은 무조건 맞고, 출력도 맞게 나온다. 다만 시간, 메모리적인 문제이고 알고리즘은 풀었기 때문에 그냥 넘어가자.
